{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","ctgries","type","onChange","target","value","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACE,0BAAMC,SAVa,SAAEC,GACrBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAO,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,SAfG,SAAEN,GAC1BF,EAAeE,EAAMO,OAAOC,QAcwBA,MAAQX,MCpBnDY,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNEK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfN,EAFe,iDAEkCO,UAAWF,GAF7C,+DAGFG,MAAOR,GAHL,cAGfS,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,kBAAyD,CAAEC,GAA3D,EAAGA,GAA4Df,MAA/D,EAAOA,MAA+DC,IAAtE,EAAce,OAAUC,iBAAoBhB,KAAsC,OANnF,kBAQdY,GARc,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBpB,mBAAS,CACjC0B,KAAM,GACNO,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAW1C,OAJAC,qBAAU,WACRjB,EAASC,GAAWiB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CAAET,KAAMY,EAAML,SAAS,SACjE,CAAEb,IAEEc,EDR2BK,CAAcnB,GAAlCU,EAFyB,EAE/BJ,KAAcO,EAFiB,EAEjBA,QAEtB,OACE,oCACE,wBAAIjB,UAAU,qCAAsCI,GAClDa,GAAW,uBAAGjB,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEXc,EAAOF,KAAI,SAAEY,GACb,OACE,kBAAC,EAAD,eAAaC,IAAMD,EAAIX,IAAUW,UEZhCE,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,cAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAQhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAAM4C,EAAWf,KAAK,SAAAR,GAAQ,OAAI,kBAAC,EAAD,CAASqB,IAAMrB,EAAWA,SAAWA,UCd7EwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3aed1960.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  \r\n  const handleInputChange = ( event ) => {\r\n    setInputValue( event.target.value );\r\n  }\r\n\r\n  const handleSubmit = ( event ) => {\r\n    event.preventDefault();\r\n\r\n    if (inputValue.trim().length > 3) {\r\n      setCategories( ctgries => [inputValue, ...ctgries]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input type=\"text\" onChange={ handleInputChange } value={ inputValue }/>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=5CAiDn3UK2nAYdsGTBj6gD73UMdXrS5O`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(({ id, title, images: { downsized_medium: { url }}}) => ({ id, title, url: url || '' }) );\r\n  \r\n  return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n      <div className=\"card-grid\">\r\n\r\n        { images.map(( img ) => {\r\n          return (\r\n            <GifGridItem key={ img.id } { ...img }/>\r\n          );\r\n        })}\r\n\r\n      </div>\r\n    </>\r\n  )\r\n} \r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs( category ).then( imgs => setState({ data: imgs, loading: false }));\r\n  }, [ category ]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n  \r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, 'HunterXHunter']);\r\n  // }\r\n  \r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n\r\n      {/* <button onClick={ handleAdd } type=\"button\" styleName=\"width: 2rem; height: 1rem;\"> Agregar </button> */}\r\n\r\n      <ol>{ categories.map( category => <GifGrid key={ category } category={ category } /> ) }</ol>\r\n      {/* <ol>{ categories.map( category => <li key={ category }>{ category }</li> ) }</ol> */}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GitExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}